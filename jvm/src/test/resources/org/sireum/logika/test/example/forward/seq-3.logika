import org.sireum.logika._

l"""{ fact
        def sum(zs: ZS, n: Z): Z
          = 0,                          if n == 0  (base)
          = sum(zs, n - 1) + zs(n - 1), if n > 0   (rec) }"""

def add(a: ZS): Z = {
  l"""{ post   result == sum(a, a.size)                  }"""

  var answer: Z = 0

  l"""{ 1. answer == 0                      premise
        2. all zs: ZS  all n: Z
             n == 0  ->  sum(zs, n) == 0    fact base
        3. 0 == 0  ->  sum(a, 0) == 0       alle 2 a 0
        4. 0 == 0                           algebra
        5. sum(a, 0) == 0                   ->e 3 4
        6. answer == sum(a, 0)              subst2 5 1   }"""
  var i: Z = 0

  l"""{ 1. answer == sum(a, 0)              premise
        2. i == 0                           premise
        3. answer == sum(a, i)              subst2 2 1
        4. 0 <= a.size                      algebra
        5. i <= a.size                      subst2 2 4
        6. 0 <= i                           algebra 2    }"""
  while (i != a.size) {
    l"""{ invariant  answer == sum(a, i)
                     0 <= i
                     i <= a.size
          modifies   answer, i                           }"""

    l"""{ 1. answer == sum(a, i)            premise
          2. 0 <= i                         premise
          3. i <= a.size                    premise
          4. i != a.size                    premise
          5. i < a.size                     algebra 3 4  }"""
    answer = answer + a(i)
    l"""{ 1. answer == answer_old + a(i)    premise
          2. answer_old == sum(a, i)        premise
          3. answer == sum(a, i) + a(i)     subst1 2 1
          4. i < a.size                     premise
          5. 0 <= i                         premise      }"""

    i = i + 1
    l"""{ 1. answer == sum(a, i_old) +
               a(i_old)                     premise
          2. i == i_old + 1                 premise
          3. 0 <= i_old                     premise
          4. i > 0                          algebra 2 3
          5. 0 <= i                         algebra 4
          6. i_old < a.size                 premise
          7. i <= a.size                    algebra 2 6
          8. all zs: ZS  all n: Z
               n > 0  ->  sum(zs, n) ==
                 sum(zs, n - 1) + zs(n - 1) fact rec
          9. i > 0  ->
               sum(a, i) ==
                 sum(a, i - 1) + a(i - 1)   alle 8 a i
         10. sum(a, i) ==
               sum(a, i - 1) + a(i - 1)     ->e 9 4
         11. i_old == i - 1                 algebra 2
         12. answer == sum(a, i - 1) +
               a(i - 1)                     subst1 11 1
         13. sum(a, i) == answer            subst2 12 10
         14. answer == sum(a, i)            algebra 13   }"""
  }
  l"""{ 1. answer == sum(a,i)               premise
        2. not (i != a.size)                premise
        3. i == a.size                      algebra 2
        4. answer == sum(a, a.size)         subst1 3 1   }"""
  return answer
}