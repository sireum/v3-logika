import org.sireum.logika._

var bs: BS = BS(false, true)
l"""⊢ ¬bs(0) ∧ bs(1)"""
bs(0) = !bs(0)
l"""⊢ ¬(∃i: (0 .. 1)  ¬bs(i))"""
l"""⊢ ∀i: (0 ..< bs.size)  bs(i)"""
bs = bs :+ false
l"""⊢ bs(0) ∧ bs(1) ∧ ¬bs(2)"""
bs = false +: bs
l"""⊢ ¬bs(0) ∧ bs(1) ∧ bs(2) ∧ ¬bs(3)"""
bs(3) = ~bs(3)
l"""⊢ ∃i: (0 ..< bs.size)  ¬bs(i)"""
l"""⊢ ∀i: (0 <..< bs.size)  bs(i)"""

// filter out claims except the following two:
// ∃i: (0 ..< bs.size)  ¬bs(i)
// ∀i: (0 <..< bs.size)  bs(i)
l"""∃i: (0 ..< bs.size)  ¬bs(i), ∀i: (0 <..< bs.size)  bs(i) ⊢ ⊤"""
l"""⊢ ¬bs(0)"""

l"""⊢ ⊤""" // reset (filter out all) claims

var zs: ZS = ZS(0, 5)
l"""⊢ zs(0) ≤ 0 ∧ zs(1) > 0"""
zs(0) = zs(0) + 1
l"""⊢ ¬(∃i: (0 .. 1)  zs(i) ≤ 0)"""
l"""⊢ ∀i: (0 ..< zs.size)  zs(i) > 0"""
zs = zs :+ 0
l"""⊢ zs(0) > 0 ∧ zs(1) > 0 ∧ zs(2) ≤ 0"""
zs = 0 +: zs
l"""⊢ zs(0) ≤ 0 ∧ zs(1) > 0 ∧ zs(2) > 0 ∧ zs(3) ≤ 0"""
zs(3) = zs(3) + 1
l"""⊢ ∃i: (0 ..< zs.size)  zs(i) ≤ 0"""
l"""⊢ ∀i: (0 <..< zs.size)  zs(i) > 0"""

// filter out claims except the following two:
// ∃i: (0 ..< zs.size)  zs(i) ≤ 0
// ∀i: (0 <..< zs.size)  zs(i) > 0
l"""
∃i: (0 ..< zs.size)  zs(i) ≤ 0     ∀i: (0 <..< zs.size)  zs(i) > 0
------------------------------------------------------------------
                                ⊤
"""
l"""⊢ zs(0) ≤ 0"""

l"""⊢ ⊤""" // reset claims

var z8s: Z8S = Z8S(z8"0", z8"5")
val z8v0: Z8 = z8"0"
val z8v1: Z8 = z8"1"
l"""⊢ z8s(0) ≤ z8v0 ∧ z8s(1) > z8v0 """
z8s(0) = z8s(0) + z8v1
l"""⊢ ¬(∃i: (0 .. 1)  z8s(i) ≤ z8v0)"""
l"""⊢ ∀i: (0 ..< z8s.size)  z8s(i) > z8v0 """
z8s = z8s :+ z8v0
l"""⊢ z8s(0) > z8v0 ∧ z8s(1) > z8v0 ∧ z8s(2) ≤ z8v0"""
z8s = z8v0 +: z8s
l"""⊢ z8s(0) ≤ z8v0 ∧ z8s(1) > z8v0 ∧ z8s(2) > z8v0 ∧ z8s(3) ≤ z8v0"""
z8s(3) = z8s(3) + z8v1
l"""⊢ ∃i: (0 ..< z8s.size)  z8s(i) ≤ z8v0"""
l"""⊢ ∀i: (0 <..< z8s.size)  z8s(i) > z8v0"""

l"""⊢ ⊤""" // reset claims

var z16s: Z16S = Z16S(z16"0", z16"5")
val z16v0: Z16 = z16"0"
val z16v1: Z16 = z16"1"
l"""⊢ z16s(0) ≤ z16v0 ∧ z16s(1) > z16v0 """
z16s(0) = z16s(0) + z16v1
l"""⊢ ¬(∃i: (0 .. 1)  z16s(i) ≤ z16v0)"""
l"""⊢ ∀i: (0 ..< z16s.size)  z16s(i) > z16v0 """
z16s = z16s :+ z16v0
l"""⊢ z16s(0) > z16v0 ∧ z16s(1) > z16v0 ∧ z16s(2) ≤ z16v0"""
z16s = z16v0 +: z16s
l"""⊢ z16s(0) ≤ z16v0 ∧ z16s(1) > z16v0 ∧ z16s(2) > z16v0 ∧ z16s(3) ≤ z16v0"""
z16s(3) = z16s(3) + z16v1
l"""⊢ ∃i: (0 ..< z16s.size)  z16s(i) ≤ z16v0"""
l"""⊢ ∀i: (0 <..< z16s.size)  z16s(i) > z16v0"""

l"""⊢ ⊤""" // reset claims

var z32s: Z32S = Z32S(z32"0", z32"5")
val z32v0: Z32 = z32"0"
val z32v1: Z32 = z32"1"
l"""⊢ z32s(0) ≤ z32v0 ∧ z32s(1) > z32v0 """
z32s(0) = z32s(0) + z32v1
l"""⊢ ¬(∃i: (0 .. 1)  z32s(i) ≤ z32v0)"""
l"""⊢ ∀i: (0 ..< z32s.size)  z32s(i) > z32v0 """
z32s = z32s :+ z32v0
l"""⊢ z32s(0) > z32v0 ∧ z32s(1) > z32v0 ∧ z32s(2) ≤ z32v0"""
z32s = z32v0 +: z32s
l"""⊢ z32s(0) ≤ z32v0 ∧ z32s(1) > z32v0 ∧ z32s(2) > z32v0 ∧ z32s(3) ≤ z32v0"""
z32s(3) = z32s(3) + z32v1
l"""⊢ ∃i: (0 ..< z32s.size)  z32s(i) ≤ z32v0"""
l"""⊢ ∀i: (0 <..< z32s.size)  z32s(i) > z32v0"""

l"""⊢ ⊤""" // reset claims

var z64s: Z64S = Z64S(z64"0", z64"5")
val z64v0: Z64 = z64"0"
val z64v1: Z64 = z64"1"
l"""⊢ z64s(0) ≤ z64v0 ∧ z64s(1) > z64v0 """
z64s(0) = z64s(0) + z64v1
l"""⊢ ¬(∃i: (0 .. 1)  z64s(i) ≤ z64v0)"""
l"""⊢ ∀i: (0 ..< z64s.size)  z64s(i) > z64v0 """
z64s = z64s :+ z64v0
l"""⊢ z64s(0) > z64v0 ∧ z64s(1) > z64v0 ∧ z64s(2) ≤ z64v0"""
z64s = z64v0 +: z64s
l"""⊢ z64s(0) ≤ z64v0 ∧ z64s(1) > z64v0 ∧ z64s(2) > z64v0 ∧ z64s(3) ≤ z64v0"""
z64s(3) = z64s(3) + z64v1
l"""⊢ ∃i: (0 ..< z64s.size)  z64s(i) ≤ z64v0"""
l"""⊢ ∀i: (0 <..< z64s.size)  z64s(i) > z64v0"""

l"""⊢ ⊤""" // reset claims

var n8s: N8S = N8S(n8"0", n8"5")
val n8v0: N8 = n8"0"
val n8v1: N8 = n8"1"
l"""⊢ n8s(0) ≤ n8v0 ∧ n8s(1) > n8v0 """
n8s(0) = n8s(0) + n8v1
l"""⊢ ¬(∃i: (0 .. 1)  n8s(i) ≤ n8v0)"""
l"""⊢ ∀i: (0 ..< n8s.size)  n8s(i) > n8v0 """
n8s = n8s :+ n8v0
l"""⊢ n8s(0) > n8v0 ∧ n8s(1) > n8v0 ∧ n8s(2) ≤ n8v0"""
n8s = n8v0 +: n8s
l"""⊢ n8s(0) ≤ n8v0 ∧ n8s(1) > n8v0 ∧ n8s(2) > n8v0 ∧ n8s(3) ≤ n8v0"""
n8s(3) = n8s(3) + n8v1
l"""⊢ ∃i: (0 ..< n8s.size)  n8s(i) ≤ n8v0"""
l"""⊢ ∀i: (0 <..< n8s.size)  n8s(i) > n8v0"""

l"""⊢ ⊤""" // reset claims

var n16s: N16S = N16S(n16"0", n16"5")
val n16v0: N16 = n16"0"
val n16v1: N16 = n16"1"
l"""⊢ n16s(0) ≤ n16v0 ∧ n16s(1) > n16v0 """
n16s(0) = n16s(0) + n16v1
l"""⊢ ¬(∃i: (0 .. 1)  n16s(i) ≤ n16v0)"""
l"""⊢ ∀i: (0 ..< n16s.size)  n16s(i) > n16v0 """
n16s = n16s :+ n16v0
l"""⊢ n16s(0) > n16v0 ∧ n16s(1) > n16v0 ∧ n16s(2) ≤ n16v0"""
n16s = n16v0 +: n16s
l"""⊢ n16s(0) ≤ n16v0 ∧ n16s(1) > n16v0 ∧ n16s(2) > n16v0 ∧ n16s(3) ≤ n16v0"""
n16s(3) = n16s(3) + n16v1
l"""⊢ ∃i: (0 ..< n16s.size)  n16s(i) ≤ n16v0"""
l"""⊢ ∀i: (0 <..< n16s.size)  n16s(i) > n16v0"""

l"""⊢ ⊤""" // reset claims

var n32s: N32S = N32S(n32"0", n32"5")
val n32v0: N32 = n32"0"
val n32v1: N32 = n32"1"
l"""⊢ n32s(0) ≤ n32v0 ∧ n32s(1) > n32v0 """
n32s(0) = n32s(0) + n32v1
l"""⊢ ¬(∃i: (0 .. 1)  n32s(i) ≤ n32v0)"""
l"""⊢ ∀i: (0 ..< n32s.size)  n32s(i) > n32v0 """
n32s = n32s :+ n32v0
l"""⊢ n32s(0) > n32v0 ∧ n32s(1) > n32v0 ∧ n32s(2) ≤ n32v0"""
n32s = n32v0 +: n32s
l"""⊢ n32s(0) ≤ n32v0 ∧ n32s(1) > n32v0 ∧ n32s(2) > n32v0 ∧ n32s(3) ≤ n32v0"""
n32s(3) = n32s(3) + n32v1
l"""⊢ ∃i: (0 ..< n32s.size)  n32s(i) ≤ n32v0"""
l"""⊢ ∀i: (0 <..< n32s.size)  n32s(i) > n32v0"""

l"""⊢ ⊤""" // reset claims

var n64s: N64S = N64S(n64"0", n64"5")
val n64v0: N64 = n64"0"
val n64v1: N64 = n64"1"
l"""⊢ n64s(0) ≤ n64v0 ∧ n64s(1) > n64v0 """
n64s(0) = n64s(0) + n64v1
l"""⊢ ¬(∃i: (0 .. 1)  n64s(i) ≤ n64v0)"""
l"""⊢ ∀i: (0 ..< n64s.size)  n64s(i) > n64v0 """
n64s = n64s :+ n64v0
l"""⊢ n64s(0) > n64v0 ∧ n64s(1) > n64v0 ∧ n64s(2) ≤ n64v0"""
n64s = n64v0 +: n64s
l"""⊢ n64s(0) ≤ n64v0 ∧ n64s(1) > n64v0 ∧ n64s(2) > n64v0 ∧ n64s(3) ≤ n64v0"""
n64s(3) = n64s(3) + n64v1
l"""⊢ ∃i: (0 ..< n64s.size)  n64s(i) ≤ n64v0"""
l"""⊢ ∀i: (0 <..< n64s.size)  n64s(i) > n64v0"""

l"""⊢ ⊤""" // reset claims

var s8s: S8S = S8S(s8"0", s8"5")
val s8v0: S8 = s8"0"
val s8v1: S8 = s8"1"
l"""⊢ s8s(0) ≤ s8v0 ∧ s8s(1) > s8v0 """
s8s(0) = s8s(0) + s8v1
l"""⊢ ¬(∃i: (0 .. 1)  s8s(i) ≤ s8v0)"""
l"""⊢ ∀i: (0 ..< s8s.size)  s8s(i) > s8v0 """
s8s = s8s :+ s8v0
l"""⊢ s8s(0) > s8v0 ∧ s8s(1) > s8v0 ∧ s8s(2) ≤ s8v0"""
s8s = s8v0 +: s8s
l"""⊢ s8s(0) ≤ s8v0 ∧ s8s(1) > s8v0 ∧ s8s(2) > s8v0 ∧ s8s(3) ≤ s8v0"""
s8s(3) = s8s(3) + s8v1
l"""⊢ ∃i: (0 ..< s8s.size)  s8s(i) ≤ s8v0"""
l"""⊢ ∀i: (0 <..< s8s.size)  s8s(i) > s8v0"""

l"""⊢ ⊤""" // reset claims

var s16s: S16S = S16S(s16"0", s16"5")
val s16v0: S16 = s16"0"
val s16v1: S16 = s16"1"
l"""⊢ s16s(0) ≤ s16v0 ∧ s16s(1) > s16v0 """
s16s(0) = s16s(0) + s16v1
l"""⊢ ¬(∃i: (0 .. 1)  s16s(i) ≤ s16v0)"""
l"""⊢ ∀i: (0 ..< s16s.size)  s16s(i) > s16v0 """
s16s = s16s :+ s16v0
l"""⊢ s16s(0) > s16v0 ∧ s16s(1) > s16v0 ∧ s16s(2) ≤ s16v0"""
s16s = s16v0 +: s16s
l"""⊢ s16s(0) ≤ s16v0 ∧ s16s(1) > s16v0 ∧ s16s(2) > s16v0 ∧ s16s(3) ≤ s16v0"""
s16s(3) = s16s(3) + s16v1
l"""⊢ ∃i: (0 ..< s16s.size)  s16s(i) ≤ s16v0"""
l"""⊢ ∀i: (0 <..< s16s.size)  s16s(i) > s16v0"""

l"""⊢ ⊤""" // reset claims

var s32s: S32S = S32S(s32"0", s32"5")
val s32v0: S32 = s32"0"
val s32v1: S32 = s32"1"
l"""⊢ s32s(0) ≤ s32v0 ∧ s32s(1) > s32v0 """
s32s(0) = s32s(0) + s32v1
l"""⊢ ¬(∃i: (0 .. 1)  s32s(i) ≤ s32v0)"""
l"""⊢ ∀i: (0 ..< s32s.size)  s32s(i) > s32v0 """
s32s = s32s :+ s32v0
l"""⊢ s32s(0) > s32v0 ∧ s32s(1) > s32v0 ∧ s32s(2) ≤ s32v0"""
s32s = s32v0 +: s32s
l"""⊢ s32s(0) ≤ s32v0 ∧ s32s(1) > s32v0 ∧ s32s(2) > s32v0 ∧ s32s(3) ≤ s32v0"""
s32s(3) = s32s(3) + s32v1
l"""⊢ ∃i: (0 ..< s32s.size)  s32s(i) ≤ s32v0"""
l"""⊢ ∀i: (0 <..< s32s.size)  s32s(i) > s32v0"""

l"""⊢ ⊤""" // reset claims

var s64s: S64S = S64S(s64"0", s64"5")
val s64v0: S64 = s64"0"
val s64v1: S64 = s64"1"
l"""⊢ s64s(0) ≤ s64v0 ∧ s64s(1) > s64v0 """
s64s(0) = s64s(0) + s64v1
l"""⊢ ¬(∃i: (0 .. 1)  s64s(i) ≤ s64v0)"""
l"""⊢ ∀i: (0 ..< s64s.size)  s64s(i) > s64v0 """
s64s = s64s :+ s64v0
l"""⊢ s64s(0) > s64v0 ∧ s64s(1) > s64v0 ∧ s64s(2) ≤ s64v0"""
s64s = s64v0 +: s64s
l"""⊢ s64s(0) ≤ s64v0 ∧ s64s(1) > s64v0 ∧ s64s(2) > s64v0 ∧ s64s(3) ≤ s64v0"""
s64s(3) = s64s(3) + s64v1
l"""⊢ ∃i: (0 ..< s64s.size)  s64s(i) ≤ s64v0"""
l"""⊢ ∀i: (0 <..< s64s.size)  s64s(i) > s64v0"""

l"""⊢ ⊤""" // reset claims

var u8s: U8S = U8S(u8"0", u8"5")
val u8v0: U8 = u8"0"
val u8v1: U8 = u8"1"
l"""⊢ u8s(0) ≤ u8v0 ∧ u8s(1) > u8v0 """
u8s(0) = u8s(0) + u8v1
l"""⊢ ¬(∃i: (0 .. 1)  u8s(i) ≤ u8v0)"""
l"""⊢ ∀i: (0 ..< u8s.size)  u8s(i) > u8v0 """
u8s = u8s :+ u8v0
l"""⊢ u8s(0) > u8v0 ∧ u8s(1) > u8v0 ∧ u8s(2) ≤ u8v0"""
u8s = u8v0 +: u8s
l"""⊢ u8s(0) ≤ u8v0 ∧ u8s(1) > u8v0 ∧ u8s(2) > u8v0 ∧ u8s(3) ≤ u8v0"""
u8s(3) = u8s(3) + u8v1
l"""⊢ ∃i: (0 ..< u8s.size)  u8s(i) ≤ u8v0"""
l"""⊢ ∀i: (0 <..< u8s.size)  u8s(i) > u8v0"""

l"""⊢ ⊤""" // reset claims

var u16s: U16S = U16S(u16"0", u16"5")
val u16v0: U16 = u16"0"
val u16v1: U16 = u16"1"
l"""⊢ u16s(0) ≤ u16v0 ∧ u16s(1) > u16v0 """
u16s(0) = u16s(0) + u16v1
l"""⊢ ¬(∃i: (0 .. 1)  u16s(i) ≤ u16v0)"""
l"""⊢ ∀i: (0 ..< u16s.size)  u16s(i) > u16v0 """
u16s = u16s :+ u16v0
l"""⊢ u16s(0) > u16v0 ∧ u16s(1) > u16v0 ∧ u16s(2) ≤ u16v0"""
u16s = u16v0 +: u16s
l"""⊢ u16s(0) ≤ u16v0 ∧ u16s(1) > u16v0 ∧ u16s(2) > u16v0 ∧ u16s(3) ≤ u16v0"""
u16s(3) = u16s(3) + u16v1
l"""⊢ ∃i: (0 ..< u16s.size)  u16s(i) ≤ u16v0"""
l"""⊢ ∀i: (0 <..< u16s.size)  u16s(i) > u16v0"""

l"""⊢ ⊤""" // reset claims

var u32s: U32S = U32S(u32"0", u32"5")
val u32v0: U32 = u32"0"
val u32v1: U32 = u32"1"
l"""⊢ u32s(0) ≤ u32v0 ∧ u32s(1) > u32v0 """
u32s(0) = u32s(0) + u32v1
l"""⊢ ¬(∃i: (0 .. 1)  u32s(i) ≤ u32v0)"""
l"""⊢ ∀i: (0 ..< u32s.size)  u32s(i) > u32v0 """
u32s = u32s :+ u32v0
l"""⊢ u32s(0) > u32v0 ∧ u32s(1) > u32v0 ∧ u32s(2) ≤ u32v0"""
u32s = u32v0 +: u32s
l"""⊢ u32s(0) ≤ u32v0 ∧ u32s(1) > u32v0 ∧ u32s(2) > u32v0 ∧ u32s(3) ≤ u32v0"""
u32s(3) = u32s(3) + u32v1
l"""⊢ ∃i: (0 ..< u32s.size)  u32s(i) ≤ u32v0"""
l"""⊢ ∀i: (0 <..< u32s.size)  u32s(i) > u32v0"""

l"""⊢ ⊤""" // reset claims

var u64s: U64S = U64S(u64"0", u64"5")
val u64v0: U64 = u64"0"
val u64v1: U64 = u64"1"
l"""⊢ u64s(0) ≤ u64v0 ∧ u64s(1) > u64v0 """
u64s(0) = u64s(0) + u64v1
l"""⊢ ¬(∃i: (0 .. 1)  u64s(i) ≤ u64v0)"""
l"""⊢ ∀i: (0 ..< u64s.size)  u64s(i) > u64v0 """
u64s = u64s :+ u64v0
l"""⊢ u64s(0) > u64v0 ∧ u64s(1) > u64v0 ∧ u64s(2) ≤ u64v0"""
u64s = u64v0 +: u64s
l"""⊢ u64s(0) ≤ u64v0 ∧ u64s(1) > u64v0 ∧ u64s(2) > u64v0 ∧ u64s(3) ≤ u64v0"""
u64s(3) = u64s(3) + u64v1
l"""⊢ ∃i: (0 ..< u64s.size)  u64s(i) ≤ u64v0"""
l"""⊢ ∀i: (0 <..< u64s.size)  u64s(i) > u64v0"""

l"""⊢ ⊤""" // reset claims

var rs: RS = RS(r"0", r"5")
val rv0: R = r"0"
val rv1: R = r"1"
l"""⊢ rs(0) ≤ rv0 ∧ rs(1) > rv0 """
rs(0) = rs(0) + rv1
l"""⊢ ¬(∃i: (0 .. 1)  rs(i) ≤ rv0)"""
l"""⊢ ∀i: (0 ..< rs.size)  rs(i) > rv0 """
rs = rs :+ rv0
l"""⊢ rs(0) > rv0 ∧ rs(1) > rv0 ∧ rs(2) ≤ rv0"""
rs = rv0 +: rs
l"""⊢ rs(0) ≤ rv0 ∧ rs(1) > rv0 ∧ rs(2) > rv0 ∧ rs(3) ≤ rv0"""
rs(3) = rs(3) + rv1
l"""⊢ ∃i: (0 ..< rs.size)  rs(i) ≤ rv0"""
l"""⊢ ∀i: (0 <..< rs.size)  rs(i) > rv0"""

l"""⊢ ⊤""" // reset claims

var f32s: F32S = F32S(0f, 5f)
l"""⊢ f32s(0) ≤ 0f ∧ f32s(1) > 0f"""
f32s(0) = f32s(0) + 1f
l"""⊢ ¬(∃i: (0 .. 1)  f32s(i) ≤ 0f)"""
l"""⊢ ∀i: (0 ..< f32s.size)  f32s(i) > 0f"""
f32s = f32s :+ 0f
l"""⊢ f32s(0) > 0f ∧ f32s(1) > 0f ∧ f32s(2) ≤ 0f"""
f32s = 0f +: f32s
l"""⊢ f32s(0) ≤ 0f ∧ f32s(1) > 0f ∧ f32s(2) > 0f ∧ f32s(3) ≤ 0f"""
f32s(3) = f32s(3) + 1f
l"""⊢ ∃i: (0 ..< f32s.size)  f32s(i) ≤ 0f"""
l"""⊢ ∀i: (0 <..< f32s.size)  f32s(i) > 0f"""

l"""⊢ ⊤""" // reset claims

var f64s: F64S = F64S(0d, 5d)
l"""⊢ f64s(0) ≤ 0d ∧ f64s(1) > 0d"""
f64s(0) = f64s(0) + 1d
l"""⊢ ¬(∃i: (0 .. 1)  f64s(i) ≤ 0d)"""
l"""⊢ ∀i: (0 ..< f64s.size)  f64s(i) > 0d"""
f64s = f64s :+ 0d
l"""⊢ f64s(0) > 0d ∧ f64s(1) > 0d ∧ f64s(2) ≤ 0d"""
f64s = 0d +: f64s
l"""⊢ f64s(0) ≤ 0d ∧ f64s(1) > 0d ∧ f64s(2) > 0d ∧ f64s(3) ≤ 0d"""
f64s(3) = f64s(3) + 1d
l"""⊢ ∃i: (0 ..< f64s.size)  f64s(i) ≤ 0d"""
l"""⊢ ∀i: (0 <..< f64s.size)  f64s(i) > 0d"""